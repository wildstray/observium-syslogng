diff -urN a/html/includes/print/custom/syslogs_filterlog.inc.php b/html/includes/print/custom/syslogs_filterlog.inc.php
--- a/html/includes/print/custom/syslogs_filterlog.inc.php	1970-01-01 01:00:00.000000000 +0100
+++ b/html/includes/print/custom/syslogs_filterlog.inc.php	2023-03-19 11:08:06.288968276 +0100
@@ -0,0 +1,178 @@
+<?php
+
+function syslogs_filterlog(&$entry, $vars)
+{
+    // Netgate pfSense filter
+    $program = 'FILTERLOG';
+    if ($entry['program'] == $program)
+    {
+        $data = str_getcsv($entry['message']);
+        $rule = $data[0];
+        $subrule = $data[1];
+        $anchor = $data[2];
+        $tracker = $data[3];
+        $interface = $data[4];
+        $reason = $data[5];
+        $action = $data[6];
+        $direction = $data[7];
+        $ipversion = $data[8];
+
+        if ($ipversion == '4')
+        {
+            $tos = $data[9];
+            $ecn = $data[10];
+            $ttl = $data[11];
+            $id = $data[12];
+            $offset = $data[13];
+            $ip_flags = $data[14];
+            $proto = $data[15];
+            $proto_text = $data[16];
+            $len = $data[17];
+            $src = $data[18];
+            $dst = $data[19];
+            if ($proto == '6' || $proto == '17')
+            {
+                $src_port = $data[20];
+                $dst_port = $data[21];
+                $data_len = $data[22];
+            }
+            if ($proto == '6')
+            {
+                $tcp_flags = $data[23];
+                $seq = $data[24];
+                $ack = $data[25];
+                $window = $data[26];
+                $urg = $data[27];
+                $options = $data[28];
+            }
+            if ($proto == '112')
+            {
+                $carp_type = $data[17];
+                $carp_ttl = $data[18];
+                $carp_vhid = $data[19];
+                $carp_ver = $data[20];
+                $carp_advskew = $data[21];
+                $carp_advbase = $data[22];
+            }
+            if ($proto == '1')
+            {
+                $icmp_type = $data[20];
+                if (in_array($icmp_type, array('request','reply')))
+                {
+                    $icmp_id = $data[21];
+                    $icmp_seq = $data[22];
+                }
+                if ($icmp_type == 'unreachproto')
+                {
+                    $icmp_dst = $data[21];
+                    $icmp_proto = $data[22];
+                }
+                if ($icmp_type == 'unreachport')
+                {
+                    $icmp_dst = $data[21];
+                    $icmp_proto = $data[22];
+                    $icmp_port = $data[23];
+                }
+                if (in_array($icmp_type, array('unreach', 'timexceed', 'paramprob', 'redirect', 'maskreply')))
+                {
+                    $icmp_descr = $data[21];
+                }
+                if ($icmp_type == 'needfrag')
+                {
+                    $icmp_dst = $data[21];
+                    $icmp_mtu = $data[22];
+                }
+                if ($icmp_type == 'tstamp')
+                {
+                    $icmp_id = $data[21];
+                    $icmp_seq = $data[22];
+                }
+                if ($icmp_type == 'tstampreply')
+                {
+                    $icmp_id = $data[21];
+                    $icmp_seq = $data[22];
+                    $icmp_otime = $data[23];
+                    $icmp_rtime = $data[24];
+                    $icmp_ttime = $data[25];
+                }
+            }
+        }
+
+        if ($ipversion == '6')
+        {
+            $class = $data[9];
+            $label = $data[10];
+            $hop_limit = $data[11];
+            $proto_text = $data[12];
+            $proto = $data[13];
+            $len = $data[14];
+            $src = $data[15];
+            $dst = $data[16];
+            if ($proto == '6' || $proto == '17')
+            {
+                $src_port = $data[17];
+                $dst_port = $data[18];
+                $data_len = $data[19];
+            }
+            if ($proto == '6')
+            {
+                $tcp_flags = $data[20];
+                $seq = $data[21];
+                $ack = $data[22];
+                $window = $data[23];
+                $urg = $data[24];
+                $options = $data[25];
+            }
+            if ($proto == '112')
+            {
+                $carp_type = $data[17];
+                $carp_ttl = $data[18];
+                $carp_vhid = $data[19];
+                $carp_ver = $data[20];
+                $carp_advskew = $data[21];
+                $carp_advbase = $data[22];
+            }
+        }
+
+        $format = '<span class="label label-secondary">%s</span> <span class="label label-%s">%s</span> %s <span class="label label-secondary"><b>%s</b></span>';
+        $action_colors = array("pass" => "success", "block" => "danger", "reject" => "warning");
+        $entry['message'] = sprintf($format, $tracker, $action_colors[$action], strtoupper($action), $interface, strtoupper($direction));
+        $format = '<a href="%s/device_id=%d/message=%s/program=%s/">%s</a>';
+
+        $prev = $vars['page'] . ($vars['tab'] ? '/tab=' . $vars['tab'] : '') . ($vars['section'] ? '/session=' . $vars['section'] : '') . ($vars['device'] ? '/device=' . $vars['device'] : '');
+
+        if ($proto == '1')
+        {
+            $format = ' %s &rarr; %s <span class="label label-warning">%s:%s</span>';
+            $entry['message'] .= sprintf($format, $src, $dst, strtoupper($proto_text), strtoupper($icmp_type));
+        }
+        if ($proto == '6')
+        {
+            $format = ' %s:%s &rarr; %s:%s <span class="label label-warning">%s:%s</span>';
+            $entry['message'] .= sprintf($format, $src, $src_port, $dst, $dst_port, strtoupper($proto_text), $tcp_flags);
+        }
+        if ($proto == '17')
+        {
+            $format = ' %s:%s &rarr; %s:%s <span class="label label-warning">%s</span>';
+            $entry['message'] .= sprintf($format, $src, $src_port, $dst, $dst_port, strtoupper($proto_text));
+        }
+        if ($proto == '112')
+        {
+            $format = ' %s &rarr; %s <span class="label label-warning">%s:%s VHID: %s ADVSKEW: %s ADVBASE: %s</span>';
+            $entry['message'] .= sprintf($format, $src, $dst, strtoupper($carp_type), $carp_version, $carp_vhid, $carp_advskew, $carp_advbase);
+        }
+        if (!in_array($proto, array('1', '6', '17', '112')))
+        {
+            $format = ' %s &rarr; %s <span class="label label-warning">%s</span>';
+            $entry['message'] .= sprintf($format, $src, $dst, strtoupper($proto_text));
+        }
+
+        $format = ' <span class="label label-primary">LEN: %s</span>';
+        $entry['message'] .= sprintf($format, $len);
+
+        return TRUE;
+      }
+      return FALSE;
+}
+
+// EOF
diff -urN a/html/includes/print/custom/syslogs_firewall.inc.php b/html/includes/print/custom/syslogs_firewall.inc.php
--- a/html/includes/print/custom/syslogs_firewall.inc.php	1970-01-01 01:00:00.000000000 +0100
+++ b/html/includes/print/custom/syslogs_firewall.inc.php	2023-03-19 10:33:32.292658979 +0100
@@ -0,0 +1,74 @@
+<?php
+
+function syslogs_firewall(&$entry, $vars)
+{
+    // Mikrotik firewall
+    $program = 'FIREWALL';
+    if ($entry['program'] == $program)
+    {
+        $pattern1 = "/(\w+): in:(.+) out:(.+), src-mac ([a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}), proto (\w+) \((.+)\), (.+)->(.+), len (\d+)/";
+        $pattern2 = "/(\w+): in:(.+) out:(.+), src-mac ([a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}), proto (\w+), (.+)->(.+), len (\d+)/";
+        $pattern3 = "/(\w+): in:(.+) out:(.+), src-mac ([a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5}), proto (\w+) \((.+)\), (.+)->(.+), NAT (.+)->\((.+)->(.+)\), len (\d+)/";
+        $match = 0;
+        if (preg_match($pattern3, $entry['message'], $regs))
+        {
+            $rule = $regs[1];
+            $in = $regs[2];
+            $out = $regs[3];
+            $mac = $regs[4];
+            $proto = $regs[6];
+            $type = $regs[7];
+            $src = $regs[8];
+            $dst = $regs[9];
+            $nat = $regs[10];
+            $nat_src = $regs[11];
+            $nat_dst = $regs[12];
+            $len = $regs[13];
+            $match = 3;
+        } elseif (preg_match($pattern1, $entry['message'], $regs))
+        {
+            $rule = $regs[1];
+            $in = $regs[2];
+            $out = $regs[3];
+            $mac = $regs[4];
+            $proto = $regs[6];
+            $type = $regs[7];
+            $src = $regs[8];
+            $dst = $regs[9];
+            $len = $regs[10];
+            $match = 1;
+        } elseif (preg_match($pattern2, $entry['message'], $regs))
+        {
+            $rule = $regs[1];
+            $in = $regs[2];
+            $out = $regs[3];
+            $mac = $regs[4];
+            $proto = $regs[6];
+            $src = $regs[7];
+            $dst = $regs[8];
+            $len = $regs[9];
+            $match = 2;
+        }
+        $format = '<a href="%s">%s</a>';
+        $prev = $vars['page'] . ($vars['tab'] ? '/tab=' . $vars['tab'] : '') . ($vars['section'] ? '/session=' . $vars['section'] : '') . ($vars['device'] ? '/device=' . $vars['device'] : '');
+        $rule = sprintf($format, generate_url($vars, array ('message' => $rule)), $rule);
+        switch ($match) {
+            case 1:
+                $format = '<span class="label label-error">%s</span> <span class="label label-secondary">IN</span> %s <span class="label label-secondary">OUT</span> %s %s <span class="label label-warning">%s: %s</span> %s &rarr; %s <span class="label label-primary">LEN: %s</span>';
+                $entry['message'] = sprintf($format, $rule, $in, $out, $mac, $proto, $type, $src, $dst, $len);
+                break;
+            case 2:
+                $format = '<span class="label label-error">%s</span> <span class="label label-secondary">IN</span> %s <span class="label label-secondary">OUT</span> %s %s <span class="label label-warning">%s</span> %s &rarr; %s <span class="label label-primary">LEN: %s</span>';
+                $entry['message'] = sprintf($format, $rule, $in, $out, $mac, $proto, $src, $dst, $len);
+                break;
+            case 3:
+                $format = '<span class="label label-error">%s</span> <span class="label label-secondary">IN</span> %s <span class="label label-secondary">OUT</span> %s %s <span class="label label-warning">%s: %s</span> %s &rarr; %s <span class="label label-info">NAT</span> %s (%s &rarr; %s) <span class="label label-primary">LEN: %s</span>';
+                $entry['message'] = sprintf($format, $rule, $in, $out, $mac, $proto, $type, $src, $dst, $nat, $nat_src, $nat_dst, $len);
+                break;
+        }
+        return TRUE;
+    }
+    return FALSE;
+}
+
+// EOF
diff -urN a/html/includes/print/custom/syslogs_zgeneric.inc.php b/html/includes/print/custom/syslogs_zgeneric.inc.php
--- a/html/includes/print/custom/syslogs_zgeneric.inc.php	1970-01-01 01:00:00.000000000 +0100
+++ b/html/includes/print/custom/syslogs_zgeneric.inc.php	2023-03-19 10:13:19.012139470 +0100
@@ -0,0 +1,34 @@
+<?php
+
+function syslogs_zgeneric(&$entry, $vars)
+{
+    if ($vars['tab'] == 'logs' || $vars['page'] == 'syslog')
+    {
+        $url = generate_url($vars, array ('message' => ''));
+
+        // link MAC addresses
+        $pattern = "([a-fA-F0-9]{2}(:[a-fA-F0-9]{2}){5})";
+        $replace = '<span class="label label-success"><a href="' . $url . 'message=${0}/">${0}</a></span>';
+        $entry['message'] = preg_replace($pattern, $replace, $entry['message']);
+
+        // link IPv4 addresses
+        $pattern = "(((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))";
+        $replace = '<a href="' . $url . 'message=${0}/">${0}</a>';
+        $entry['message'] = preg_replace($pattern, $replace, $entry['message']);
+
+        // link IPv6 addresses
+        $pattern = "((([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))";
+        $replace = '<a href="' . $url . 'message=${0}/">${0}</a>';
+        $entry['message'] = preg_replace($pattern, $replace, $entry['message']);
+
+        // link hashes
+        $pattern = "(MD5|SHA1|SHA256\:.+)";
+        $replace = '<a href="' . $url . 'message=${0}/">${0}</a>';
+        $entry['message'] = preg_replace($pattern, $replace, $entry['message']);
+
+        return TRUE;
+    }
+    return FALSE;
+}
+
+// EOF
diff -urN a/html/includes/print/syslogs.inc.php b/html/includes/print/syslogs.inc.php
--- a/html/includes/print/syslogs.inc.php	2022-12-30 11:53:41.000000000 +0100
+++ b/html/includes/print/syslogs.inc.php	2023-02-19 15:07:00.710826290 +0100
@@ -224,6 +224,7 @@
   $string .= '<td class="state-marker"></td>' . PHP_EOL;
   $timediff = get_time() - strtotime($entry['timestamp']);
 
+/*
   if ($short || $timediff < 3600) {
     $string .= '    <td class="syslog text-nowrap">';
     $string .= generate_tooltip_time($entry['timestamp']) . '</td>' . PHP_EOL;
@@ -232,6 +233,9 @@
     $string .= '    <td>';
     $string .= format_timestamp($entry['timestamp']) . '</td>' . PHP_EOL;
   }
+*/
+  $string .= '    <td>';
+  $string .= format_timestamp($entry['timestamp']) . '</td>' . PHP_EOL;
 
   // Device column
   if ($list['device'])
@@ -386,6 +390,23 @@
   // Restore escaped quotes (for old entries)
   $entry['message'] = str_replace([ '\"', "\'" ], [ '"', "'" ], $entry['message']);
 
+  $plugins_functions = array();
+  // look for syslogs plugins and use if exists
+  foreach (glob("includes/print/custom/syslogs_*.inc.php") as $filename) {
+    require_once($filename);
+    $function = basename($filename, ".inc.php");
+    $plugins_functions[] = $function;
+    if (function_exists($function))
+    {
+      $function($entry, $vars);
+    }
+  }
+  $string .= ' ' . html_highlight($entry['message'], $entity_links, NULL, TRUE) . '</td>' . PHP_EOL;
+
+  $string .= '  </tr>' . PHP_EOL;
+
+  return $string;
+/*
   $string .= ' ' . html_highlight(escape_html($entry['message']), $entity_links, NULL, TRUE) . '</td>' . PHP_EOL;
   //$string .= ' ' . escape_html($entry['msg']) . '</td>' . PHP_EOL;
 
@@ -398,6 +419,7 @@
   $string .= '  </tr>' . PHP_EOL;
 
   return $string;
+*/
 }
 
 function generate_syslog_form_values($form_filter = FALSE, $column = NULL)
